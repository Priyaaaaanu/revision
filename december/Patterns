n=5
* 
* 2 
* 2 * 
* 2 * 4 
* 2 * 4 * 
for(int row=1;row<=n;row++){
  for(int c=1;c<=row; c++){
    if(c%2==1){
      System.out.print("* ");
    }
    else{
      System.out.print(c+" ");
    }
  }
  System.out.println();
}




n=5
*   *
*   *
*   *
*   *
*   *
for(int row=1;row<=n;row++){
  System.out.print("*");
  for(int space=1;space<=n-2;space++){
    System.out.print(" ");
  }
  System.out.print("*");
  System.out.println();
}


Reverse Left Half Pyramid
n=5
*****
****
***
**
*
for(int row=1;row<=n;row++){
  for(int star=1;star<=n+1-row;star++){
    System.out.print("*");
  }
  System.out.println();
}



n=4
* _ _ _ *
* _ _ *
* _ *
* *
for(int row=1;row<=n;row++){
  System.out.print("*");
  for(int underscore=1;underscore<=n-row;underscore++){
    System.out.print("_");
  }
  System.out.print("*");
  System.out.println();
}



Staircase Pyramid/ Left Half Pyramid
n=4
   *
  **
 ***
****
for(int row=1;row<=n;row++){
  for(int space=1;space<=n-row;space++){
    System.out.print(" ");
  }
  for(int star=1;star<=row;star++){
    System.out.print("*");
  }
  System.out.println();
}



n=4
********
***  ***
**    **
*      *
for(int row=1;row<=n;row++){
  for(int star1=1; star1<=n+1-row; star1++){
    System.out.print("*");
  }
  for(int space=1; space<=2*(row-1); space++){
    System.out.print(" ");
  }
  for(int star2=1; star2<=n+1-row; star2++){
    System.out.print("*");
  }
  System.out.println();
}



Pyramid
n=4
   *   
  ***  
 ***** 
*******
for(int row=1;row<=n;row++){
  for(int space1=1; space1<=n-row; space1++){
    System.out.print(" ");
  }
  for(int star=1; star<=2*row-1; star++){
    System.out.print("*");
  }
  for(int space2=1; space2<=n-row; space2++){
    System.out.print(" ");
  } //its okay if right space part is removed !! (depends on qtn)
  System.out.println();
}




1) square howllow pattern
****
*  *
*  *
****
for(int row=1;row<=n;row++){
  if(row==1 || row==n){
    for(int c=1;c<=n;c++){
      System.out.print("*");
    }
  }
  else{
    System.out.print("*");
    for(int space=1;space<=n-2;space++){
      System.out.print(" ");
    }
    System.out.print("*");
  }
  System.out.println();
}



   1 
  1 2 
 1 2 3 
1 2 3 4 
for(int row=1;row<=n;row++){
  for(int space=1;space<=n-row;space++){
    System.out.print(" ");
  }
  for(int num=1;num<=row;num++){
    System.out.print(num+" ");
  }
  System.out.println();
}



   1 
  2 2 
 3 3 3 
4 4 4 4 
for(int row=1;row<=n;row++){
  for(int space=1;space<=n-row;space++){
    System.out.print(" ");
  }
  for(int num=1;num<=row;num++){
    System.out.print(row+" ");
  }
  System.out.println();
}



1 
1 2 
1 2 3 
1 2 3 4 
for(int row=1;row<=n;row++){
  for(int num=1; num<=row; num++){
    System.out.print(num + " ");
  }
  System.out.println();
}



1 2 3 4 
1 2 3 
1 2 
1 
for(int row=1;row<=n;row++){
        for(int num=1; num<=n-row+1; num++){
          System.out.print(num + " ");
        }
        System.out.println();
      }



1 
2 3 
4 5 6 
7 8 9 10 
int num=1;
for(int row=1;row<=n;row++){
  for(int numitr=1; numitr<=row; numitr++){
    System.out.print(num + " ");
    num++;
  }
  System.out.println();
}



1 
0 1 
1 0 1 
0 1 0 1 
for(int row=1;row<=n;row++){
        for(int num=1; num<=row; num++){
          if((row+num)%2==0){
            System.out.print("1" + " ");
          }
          else{
            System.out.print("0" + " ");
          }
        }
        System.out.println();
      }



      1 
    2 1 2 
  3 2 1 2 3 
4 3 2 1 2 3 4 
int i;
      int j;
      for (i = 1; i <= n; i++) { 
            // inner loop to print the spaces 
            for (j = 1; j <= 2 * (n - i); j++) { 
                System.out.print(" "); 
            } 
  
            // inner loop to print the first part 
            for (j = i; j >= 1; j--) { 
                System.out.print(j + " "); 
            } 
  
            // inner loop to print the second part 
            for (j = 2; j <= i; j++) { 
                System.out.print(j + " "); 
            } 
  
            // printing new line for each row 
            System.out.println(); 
        } 
